/**
 * Cohere APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import { Example, exampleSchema } from './example';
import { TruncateEnum, truncateEnumSchema } from './truncateEnum';

export interface V1ClassifyRequest {
  /** The size of the model. Currently available models are `small` and `large` (default). Smaller models are faster, while larger models will perform better. [Custom models](/docs/training-custom-models) can also be supplied with their full ID. */
  model?: string;
  /** Represents a list of queries to be classified, each entry must not be empty. The maximum is 32 inputs. */
  inputs: string[];
  /** An array of examples to provide context to the model. Each example is a text string and its label/class. Each unique label/class requires at least 5 examples associated with it, there is a maximum of 50 total examples. */
  examples: Example[];
  truncate?: TruncateEnum;
}

export const v1ClassifyRequestSchema: Schema<V1ClassifyRequest> = object({
  model: ['model', optional(string())],
  inputs: ['inputs', array(string())],
  examples: ['examples', array(lazy(() => exampleSchema))],
  truncate: ['truncate', optional(truncateEnumSchema)],
});
