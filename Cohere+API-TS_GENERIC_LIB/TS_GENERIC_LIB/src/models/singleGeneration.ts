/**
 * Cohere APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { TokenLikelihood, tokenLikelihoodSchema } from './tokenLikelihood';

export interface SingleGeneration {
  id: string;
  text: string;
  /** Refers to the nth generation. Only present when `num_generations` is greater than zero. */
  index?: number;
  likelihood?: number;
  /** Only returned if `return_likelihoods` is set to `GENERATION` or `ALL`. The likelihood refers to the average log-likelihood of the entire specified string, which is useful for [evaluating the performance of your model](likelihood-eval), especially if you've created a [custom model](/docs/training-custom-models). Individual token likelihoods provide the log-likelihood of each token. The first token will not have a likelihood. */
  tokenLikelihoods?: TokenLikelihood[];
}

export const singleGenerationSchema: Schema<SingleGeneration> = object({
  id: ['id', string()],
  text: ['text', string()],
  index: ['index', optional(number())],
  likelihood: ['likelihood', optional(number())],
  tokenLikelihoods: [
    'token_likelihoods',
    optional(array(lazy(() => tokenLikelihoodSchema))),
  ],
});
