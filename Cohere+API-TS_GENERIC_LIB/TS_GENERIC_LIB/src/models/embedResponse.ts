/**
 * Cohere APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { Meta, metaSchema } from './meta';

export interface EmbedResponse {
  id: string;
  /** An array of embeddings, where each embedding is an array of floats. The length of the `embeddings` array will be the same as the length of the original `texts` array. The `small` embeddings have length `1024` and the large embeddings have length `4096`. */
  embeddings: unknown[];
  /** The text entries for which embeddings were returned. */
  texts: string[];
  meta?: Meta;
}

export const embedResponseSchema: Schema<EmbedResponse> = object({
  id: ['id', string()],
  embeddings: ['embeddings', array(unknown())],
  texts: ['texts', array(string())],
  meta: ['meta', optional(lazy(() => metaSchema))],
});
