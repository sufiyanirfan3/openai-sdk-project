/**
 * Cohere APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  number,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';

export interface RerankRequest {
  /** The identifier of the model to use, one of : `rerank-english-v2.0`, `rerank-multilingual-v2.0` */
  model?: string;
  /** The search query */
  query: string;
  /**
   * A list of document objects or strings to rerank.
   * If a document is provided the text fields is required and all other fields will be preserved in the response.
   * The total max chunks (length of documents * max_chunks_per_doc) must be less than 10000.
   */
  documents: unknown[];
  /** The number of most relevant documents or indices to return, defaults to the length of the documents */
  topN?: number;
  /**
   * - If false, returns results without the doc text - the api will return a list of {index, relevance score} where index is inferred from the list passed into the request.
   * - If true, returns results with the doc text passed in - the api will return an ordered list of {index, text, relevance score} where index + text refers to the list passed into the request.
   */
  returnDocuments?: boolean;
  /** The maximum number of chunks to produce internally from a document */
  maxChunksPerDoc?: number;
}

export const rerankRequestSchema: Schema<RerankRequest> = object({
  model: ['model', optional(string())],
  query: ['query', string()],
  documents: ['documents', array(unknown())],
  topN: ['top_n', optional(number())],
  returnDocuments: ['return_documents', optional(boolean())],
  maxChunksPerDoc: ['max_chunks_per_doc', optional(number())],
});
