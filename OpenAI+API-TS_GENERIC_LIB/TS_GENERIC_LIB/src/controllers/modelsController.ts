/**
 * OpenAI APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ListModelsResponse,
  listModelsResponseSchema,
} from '../models/listModelsResponse';
import { Model, modelSchema } from '../models/model';
import { string } from '../schema';
import { BaseController } from './baseController';

export class ModelsController extends BaseController {
  /**
   * Retrieves a model instance, providing basic information about the model such as the owner and
   * permissioning.
   *
   * @param model The ID of the model to use for this request
   * @return Response from the API call
   */
  async retrieveModel(
    model: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<Model>> {
    const req = this.createRequest('GET');
    const mapped = req.prepareArgs({ model: [model, string()] });
    req.appendTemplatePath`/models/${mapped.model}`;
    return req.callAsJson(modelSchema, requestOptions);
  }

  /**
   * Lists the currently available models, and provides basic information about each one such as the
   * owner and availability.
   *
   * @return Response from the API call
   */
  async listModels(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ListModelsResponse>> {
    const req = this.createRequest('GET', '/models');
    return req.callAsJson(listModelsResponseSchema, requestOptions);
  }
}
